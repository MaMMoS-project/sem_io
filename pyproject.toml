[build-system]
requires = ["setuptools>=77", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "sem_io"
description = "Python functions to extract, view and store metadata from the header of SEM images"
authors = [
    {name = "Thomas G. Woodcock"},
    {name = "The sem_io Developers"},
]
maintainers = [{name = "Thomas G. Woodcock"},]
license = "MIT"
license-files = ["LICENSE"]

classifiers=[
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Development Status :: 4 - Beta",
    "Intended Audience :: End Users/Desktop",
    "Intended Audience :: Science/Research",
    "Operating System :: OS Independent",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Visualization",
    "Topic :: Scientific/Engineering :: Image Processing",
    "Topic :: Scientific/Engineering :: Physics",
    "Topic :: Utilities",
]
keywords = ["research", "data", "electron microscopy", "SEM", "image", "metadata"]
requires-python = ">=3.6"
dependencies = ["Pillow"]
dynamic = ["version"]

[project.readme]
'file' = "README.md"
'content-type' = "text/markdown"

[project.urls]
"Source" = "https://github.com/tgwoodcock/sem_io.git"
"Bug Tracker" = "https://github.com/tgwoodcock/sem_io.git/issues"

[project.optional-dependencies]
dev = [
    "ruff",
    "pre-commit                   >= 1.16",
]

[tool.ruff.lint]
select = [
  "B",   # flake8-bugbear
  "D",   # pydocstyle
  "E",   # pycodestyle
  "F",   # Pyflakes
  "I",   # isort
  "SIM", # flake8-simplify
  "UP",  # pyupgrade
]
ignore = [
  # conflict with other rules
  "D203", # one-blank-line-before-class (conflicts with D204)
  "D212", # multi-line-summary-first-line (conflicts with D213)
  # conflict with formatter
  "D206", # indent-with-spaces
  "D300", # triple-single-quotes
  "E111", # indentation-with-invalid-multiple
  "E114", # indentation-with-invalid-multiple-comment
  "E117", # over-indented
  # conflict with Python 3.6 compatibility
  "UP022", # replace-stdout-stderr
  # personal preference
  "SIM108", # turnary operator instead of if else block
  "D205", # one-blank-line-required-between-summary-line-and-description
]

[tool.ruff.lint.isort]
known-local-folder = ["src"]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.format]
docstring-code-format = true

[project.scripts]
sem_io = "sem_io.cli:cli"

[tool.setuptools.dynamic]
version = {attr = "sem_io.__version__"}

[tool.setuptools.packages.find]
where = ["src"]